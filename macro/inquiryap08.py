import argparse
import datetime
import subprocess,sys
import os
sys.path.insert(0,'..')
sys.path.insert(0,'.')
import X3270

"""
Note:
to run this script well, tso must meet the following condition:
1. x3270 run on scripting mode
2. xdc default dataset to [tsouser].transfer

...continue

"""
parser = argparse.ArgumentParser()
parser.add_argument('--mf', help='mf instance')
parser.add_argument('--niktgl', help='150029010120')
parser.add_argument('--output', help='output file name')
args = parser.parse_args()

# script instantiation
_mf_ibm     = X3270.X3270('mainframe','5000')
_mf_hrc     = X3270.X3270('hercules','6000')
# select to be used
try: 
    mf = { 'ibm':_mf_ibm,'hrc':_mf_hrc }.get( args.mf, _mf_hrc )
except:    
    mf = _mf_ibm

#param param
# user       = "%s" % (args.user or '7374032mcsmis')

# mf.movecursor(0,68).string(user).enter()
# mf.sleep(2)
emps = [
    '120001','120002','120003','120005','120006','120007','120009','120010','120011','120012','120013','120016','120017','120019','130001','130002','130005','130007','130009','130010','130012','130013','140003','140006','150045','150046','150047','150050','150052','150053','150054','150055','150057','150059','150061','150063','150065','150066','150067','150069','160043','160044','160047','160049','160050','160060','170004','170005','170006','170007','170008','170009','170010','170011','170012','170015','170017','170023','170025','170030','170031','170033','170034','170035','170036','170037','170038','170039','170040','170041','170042','170043','170044','180002','180003','180004','180005','180023','180024','180025','180026','180027','180028','180029','180032','180034','180035','180036','180038','180043','180046','180047','180049','180050','180052','180053','180054','180056','180058','180059','180060','180063','190001','190002','190003','190004','190005','190006','190007','190010','190011','190012','190013','190014','190016','190017','190018','190019','190020','190022','190023','190026','190027','190028','190029','190030','200003','200011','200012','200013','200014','200015','200016','200017','200018','200019','200020','200021','200022','200023','200024','200025','200026','200027','200028','200029','200030','200031','200032','200033','200034','200035','200036','200037','200038','200039','200040','200041','200042','200044','200045','200046','200047','200048','540002','540007','540008','540009','540010','540011','540012','540013','540014','540017','540019','540022','540024','540025','540026','540027','540028','540029','540030','540031','540032','540033','540034','540035','540036','540037','540038','540039','540043','540046','540049','540050','833128','840014','850140','850265','850558','850860','850863','850864','850872','850876','850888','850894','850898','850903','851036','851132','851182','851189','851191','860610','870267','870284','870310','870334','870350','870485','870566','870591','871146','871147','871162','871175','871176','871214','871247','871387','871405','871413','871414','871424','871454','871491','871494','871516','871520','871533','871539','871540','871545','871546','871570','871672','871694','871700','871745','871772','880141','880499','890085','890136','890162','890166','890199','890280','890289','890305','890314','890319','890326','890331','890351','900055','900056','900088','900100','900103','900107','900128','900138','900143','900150','900238','900241','900244','900255','900292','900304','900315','910099','910241','920067','920377','920437','920438','920621','920646','930211','930888','940004','940081','950133','960057','960262','999020','999021','999037','999040','999041','999042','999046','999047','999052','999055','999057','999058','999063','999064','999068','999070','999071','999072','999074','999078','999079','999087','999089','999090','999091','999092','999093'
]
date = [
    '010121',
]
#emp - ct baru

MFOUTLIST_DIR = os.path.join(os.path.expanduser("~"),'mfoutlist')
DST = 'AP08DATA'
nf = open(os.path.join(MFOUTLIST_DIR,DST), "w+") 
ne = open(os.path.join(MFOUTLIST_DIR,'WIP.AP08.ENTRY'), "r") 
wip = []
for i in ne.readlines():
    wip.append(i.strip())

# for e in emps:
#     for d in date:
#         mf.movecursor(2,11).string("d%s%s"%(e,d)).enter().sleep(5).enter()
new_line = 'WIP'.ljust(6,' ')+' '+\
        'MAT-IDR'.ljust(21,' ')+' '+\
        'MAT-USD'.ljust(21,' ')+' '+\
        'M/H-IDR'.ljust(21,' ')+' '+\
        'M/H-USD'.ljust(21,' ')+' '+\
        'OTH-IDR'.ljust(21,' ')+' '+\
        'OTH-USD'.ljust(21,' ')+'\n'
nf.write(new_line)

for dt in wip:
    # print(dt)
    mf.movecursor(2,12).string("%s"%(dt)).enter()
    layar = mf.screen()
    lines = layar[0].split('\n')
    mh = {
        'idr':''.ljust(20,' '),
        'usd':''.ljust(20,' '),
    }
    mt = {
        'idr':''.ljust(20,' '),
        'usd':''.ljust(20,' '),
    }
    oth = {
        'idr':''.ljust(20,' '),
        'usd':''.ljust(20,' '),
    }
    for l in lines:
        if 'TOTAL-MAT:' in l:
            mt['idr'] = l[15:36].ljust(20,' ').replace('*'," ")
            mt['usd'] = l[43:64].ljust(20,' ').replace('*'," ")
        if 'TOTAL-M/H:' in l:
            mh['idr'] = l[15:36].ljust(20,' ').replace('*'," ")
            mh['usd'] = l[43:64].ljust(20,' ').replace('*'," ")
        if 'TOTAL-OTH:' in l:
            oth['idr'] = l[15:36].ljust(20,' ').replace('*'," ")
            oth['usd'] = l[43:64].ljust(20,' ').replace('*'," ")

    new_line = dt+' '+\
        mt['idr']+' '+\
        mt['usd']+' '+\
        mh['idr']+' '+\
        mh['usd']+' '+\
        oth['idr']+' '+\
        oth['usd']+'\n'
    print(new_line)
    nf.write(new_line)


nf.close()
# if runxls.lower() == 'y':
os.chdir('..')
os.chdir('export')
# sys.argv = [sys.argv[0],'--input='+FILE,'--output='+FILE]
sys.argv = [
    '',
    '--input=AP08DATA',
    '--output=AP08DATA.xls',
]
# sys.argv = [sys.argv[0]]
execfile(__file__)